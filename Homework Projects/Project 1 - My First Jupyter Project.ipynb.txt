{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# My First Jupyter Project\n",
    "\n",
    "Your are in this class to learn how to use computational tools to support economic analysis. While the class is intended to improve your skills as economists, it will open many other doors for you. After this course you will have developed the foundational knowledge required to enter a variety of fields:\n",
    "\n",
    "- computational finance\n",
    "- data analysis data science\n",
    "- functional and object oriented programming\n",
    "\n",
    "If you wish develop these skills, you will benefit from concurrently enrolling in econometrics, commodity trading, or courses in statistics and computer science.\n",
    "\n",
    "The goal of our first lesson is to get acquainted with Jupyter notebooks. Jupyter notebooks are ideal for building a portfolio that you can save on GitHub or as an html file that can be integrated into a personal website. Plan to showcase your work to impress interested employers. \n",
    "\n",
    "You will need to learn to work with Jupyter. Whenever you work on a project, it will be useful to keep open a list of [keyboard shortcuts](https://cheatography.com/weidadeyue/cheat-sheets/jupyter-notebook/) and a [list of useful commands](https://medium.com/ibm-data-science-experience/markdown-for-jupyter-notebooks-cheatsheet-386c05aeebed) for altering text and creating useful structures (i.e, lists, hyperlinks, etc..) in markdown mode.\n",
    "\n",
    "All projects will need to be created using Jupyter notebooks. \n",
    "\n",
    "## The plan for the course\n",
    "\n",
    "Before the start of every section, you are expected to complete code from the textbook, [Learn Python for Economic Computation: A Crash Course](https://github.com/jlcatonjr/Learn-Python-for-Stats-and-Econ/tree/master/Textbook).  If you follow the link, you will see that the textbook is most conveniently available on Github. Video lessons are also available on the course's [YouTube channel](https://www.youtube.com/channel/UCd6JlwcMxPn76HmmmGSkZeQ/). All video lessons use the *Spyder* integrated development environment (IDE) which you can access by typing \"spyder\" into the search bar of your operating system. Assigned readings are indicated in the [ECON 411](https://github.com/jlcatonjr/Learn-Python-for-Stats-and-Econ/blob/master/ECON%20411%20Syllabus.docx) or [ECON 611](https://github.com/jlcatonjr/Learn-Python-for-Stats-and-Econ/blob/master/ECON%20611%20Syllabus.docx) syllabi.\n",
    "\n",
    "To get started, you will need to follow the instructions in the [Introduction](https://github.com/jlcatonjr/Learn-Python-for-Stats-and-Econ/blob/master/Textbook/Introduction.ipynb) to [download and install](https://www.anaconda.com/products/individual#download-section) Anaconda. If at all possible, you are encouraged to work using your own system so that you can participate online in the case that you are unable to attend lecture in person. Managing course material will be much easier if you consistently use the same machine and/or use a thumb drive to organize material.\n",
    "\n",
    "In class, development of material will occur organically. Every class we will build projects in Jupyter notebooks. Each in class project will start with an initial outline, with much of the work being developed live in class. Projects covered in the early stages of the course will often include material not yet covered in the text. This is for your benefit as you will often have to approach unfamiliar material when developing your own projects. This wil allow us to approach the most useful content from the very beginning of the course. I will walk you step by step through these in class projects. \n",
    "\n",
    "*To the extent possible, every project will be taught as part of a creative process that will likely involve a search for solutions to problems as they arise. While I will always have an idea about how to approach a problem, I have no intention of pretending that I can recite solutions to these projects outside of a creative process.*\n",
    "\n",
    "*When you enter the work environment or engage in graduate projects, the level of uncertainty that you face will at least match the level of uncertainty that is apparent with each in class project. Approach problems with humility. Assume you will have to develop solutions and learn in the process. This is a fact of life.* \n",
    "\n",
    "The projects may be completed in class, but will likely require work outside of class. I will help you get started with each project in class. Each lesson will follow the same template. I will provide an initial *.ipynb* file to build from. We will use class to explore the initial stages of a project, with expectation that you complete a similar project at home. *You must complete both the in class project and the at home project*. These will eventually be saved on Github starting in the third section of class. I will show you how to upload the first two projects to GitHub in class. Once your projects are uploaded, I will grade them as they appear on GitHub.\n",
    "\n",
    "I will also be available for a weekly workshop on Thursdays at 10 AM in the commodity trading room (CTR, BH 124) to help you continue developing projects. Attendance of workshop in the CTR are not required for the course.\n",
    "\n",
    "## Creating a Jupyter Notebook\n",
    "\n",
    "To get started you need to create a Jupyter notebook. If Anaconda has been installed on your machine, open the command line (or powershell in Windows) to open the Jupyter interface. Create a folder where you intend to organize work over the course of the semester. Then, save a copy of this notebook in that folder by choosing *File*->*Save As* and navigating to your preferred folder. \n",
    "\n",
    "## Python Fundamentals\n",
    "\n",
    "In the first workshop, we will familiarize ourselves with the fundamentals of computing. Our in class work will, by its nature, be exploratory. Some of the material will include concepts from chapter 1. Other materials may be outside of the scope of chapter 1. \n",
    "\n",
    "In this exercise, we will create a dataframe that identifies professors in the department. In separate columns, we will  include a brief biography (from their website if possible), identify their areas of study, and include a link to their website. \n",
    "\n",
    "In this project, we will:\n",
    "\n",
    "1. Visit the [NDSU department of agribusiness](https://www.ndsu.edu/agecon/)\n",
    "2. Create a dictionary with the information identified above.\n",
    "3. Transform dictionary into pandas DataFrame\n",
    "\n",
    "### Dictionaries\n",
    "\n",
    "The dictionary is a data structure that links keys to other objects. You might think about a standard *Webster's Dictionary* in the same manner. The dictionary has keys (words) that link to objects (definitions). For practice, let's make a dictionary using this logic. Then we will proceed to the dictionary referenced above. \n",
    "\n",
    "I will explain as we move along in the example."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Structure the dictionary: {\"Scott\":{\"Age\":\"21\", \n",
    "#                                     \"Favorite Food\":\"Left Over Chicken Tortilla Soup\"\n",
    "#                                     \"Interests\":\"Playing Baseball and Precision Agriculture\"},\n",
    "#                            \"Clara\":{\"Age\":\"24\",\n",
    "#                                     . . . }}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have an idea of how dictionaries are structured, create dictionary of the following structure with the specified information for each profess at the department website:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# remember to include a brief biography, the area of study, and a link to the professor's website"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### *pandas*\n",
    "Next we will import the pandas library and transform the dictionary into a DataFrame. Then we will save the dataframe as a csv."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "# to save a dictionary as a dataframe, pass the dictionary to pd.DataFrame()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Homework \n",
    "\n",
    "1. Create a dictionary that identifies your name, major(s)/minor(s), motivation for taking the course, and plans for after you graduate from NDSU. Transform this into a datframe. Print the dataframe and save the datframe as a csv.\n",
    "\n",
    "2. Create a dictionary with the same structure as the dictionary we created in the in class project for 10 professionals or specialists that you admire. The dictionary should include keys that identify the name of the professional, their area of expertise, a short biography, and a link to their website (or social media profile if no website is available). Print the dataframe and save this dataframe as a csv."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
